{"name":"Populous","tagline":"Populates a <select> with a remote JSON.","body":"# Populous.js\r\n\r\n> Populates a `<select>` with a remote JSON.\r\n\r\n## Usage by example:\r\n\r\nYour HTML file:\r\n```html\r\n<select>\r\n```\r\n\r\nYour JSON, say `/options.json`:\r\n```javascript\r\n['Banana', 'Apple', 'Grape', 'Cranberry']\r\n```\r\n\r\nYour JavaScript:\r\n```javascript\r\nvar dropdown;\r\n\r\ndropdown = $('select').populous({\r\n  url: '/options.json'\r\n});\r\n```\r\n\r\nAnd finally, you'll have to load it:\r\n```javascript\r\ndropdown.load();\r\n```\r\n\r\nBam! Your `<select>` now has 4 options: `Banana`, `Apple`, `Grape` and `Cranberry`.\r\n\r\n## Configuration\r\n\r\n### Mapping the response\r\n\r\nPopulous use a `map` function to handle the response.\r\n\r\n```javascript\r\ndropdown.map = function(response) {\r\n  return [];\r\n};\r\n```\r\n\r\nThe resulting array may comprise arrays (pairs of label and value) or strings (that will be used as both).\r\n\r\nBelow is the default `map` function.\r\n\r\n```javascript\r\nfunction(response) {\r\n  return $.map(response, function(label) {\r\n    return [[label, label]]; // jQuery#map make it flat, so we add depth\r\n  });\r\n}\r\n```\r\n\r\n### AJAX\r\n\r\nThe hash you provide when calling the plugin accepts the same values of [jQuery AJAX settings](http://api.jquery.com/jQuery.ajax/#jQuery-ajax-settings).\r\n\r\n```\r\n$('select').populous({\r\n  url: '/basket',\r\n  method: 'POST',\r\n  data: {all: 'fruits'}\r\n});\r\n```\r\n\r\n## API\r\n\r\n### Events and states\r\n\r\nThere are 2 new events being fired - `loading` and `loaded` - that happens, respectively, right before and after the request that populates the `<select>`.\r\n\r\n```javascript\r\n$('select').on('loading', function() {\r\n  $(this).attr('disabled', true);\r\n});\r\n\r\n$('select').on('loaded', function() {\r\n  $(this).attr('disabled', false);\r\n});\r\n```\r\n\r\nAlso, there's a data property being set to flag when it's loading.\r\n\r\n```javascript\r\nif($('select').data('loading')) {\r\n  alert('Wait!');\r\n} else {\r\n  alert('Ready!');\r\n}\r\n```\r\n\r\n### Updating value\r\n\r\nPopulous does a little patch to allow jQuery's standard method `val` to seamlessly update the `<select>` even when it isn't finished loading.\r\n\r\n```javascript\r\ndropdown.load();\r\ndropdown.val('Hey!'); //=> Will update when finish loading.\r\n```\r\n\r\n## License\r\n\r\nThis project is licensed under [Attribution-ShareAlike 3.0 Unported](http://creativecommons.org/licenses/by-sa/3.0/).\r\n\r\n## Contribution\r\n\r\n1. Fork it\r\n2. Change it\r\n3. Commit with brief yet meaningful description\r\n4. Send pull request\r\n\r\nAlso, you could simply register an issue, or comment in one.\r\n","google":"UA-41277078-1","note":"Don't delete this file! It's used internally to help with page regeneration."}